<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mw.monitor.user.dao.MWADUserDao">
    <sql id="whereSql">
            1 = 1
            <if test="adServerIpAdd != null and adServerIpAdd != ''">
                and
                "ad_ip_add" = #{adServerIpAdd}
            </if>
            <if test="adPort != null and adPort != ''">
                And
                "ad_port" = #{adPort}
            </if>
    </sql>

    <insert id="insertUser">
       INSERT INTO ${TBSNAME}."mw_sys_user" (
            "user_id",
            "user_name",
            "login_name",
            "user_type",
            "delete_flag",
            "user_state",
            "creator",
            "modifier",
            "create_time",
            "update_time",
            "password",
            "active_passwd_plan",
            "default_passwd_plan",
            "user_expiry_date",
            "phone_number",
            "email",
            "validity_type",
            "wechat_id",
            "dd_id"
        )
        VALUES(
            ${TBSNAME}.SEQ_SYS_USER.NEXTVAL,
            #{userName},
            #{loginName},
            #{userType},
            0,
            #{userState},
            #{creator},
            #{modifier},
            sysdate,
            sysdate,
            'password',
            #{activePasswdPlan},
            #{defaultPasswdPlan},
            #{userExpiryDate},
            #{phoneNumber},
            #{email},
            1,
            #{wechatId},
            #{ddId}
        )
    </insert>

    <insert id="insertInfo" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            select ${TBSNAME}.SEQ_AD_INFO_MAPPER.NEXTVAL from dual
        </selectKey>
        INSERT INTO ${TBSNAME}."mw_ad_info_mapper" (
        "id",
        "ad_ip_add",
        "ad_port",
        "ad_info",
        "local_info",
        "group_info",
        "search_nodes",
        "ad_type",
        "role_id",
        "group_id",
        "org_id",
        "config_desc"
         )
        VALUES(
            #{id},
            #{adServerIpAdd},
            #{adPort},
            #{adInfo},
            #{localInfo},
            #{groupInfo},
            #{searchNodes},
            #{type},
            #{roleId},
            #{userGroup},
            #{department},
            #{configDesc}
            )
    </insert>

    <insert id="insertConfigUser" parameterType="cn.mw.monitor.user.model.ADUserDetailDTO">
        insert into
            ${TBSNAME}."mw_adconfig_user_mapper" ("id","config_id","user_name","login_name")
        values (
            ${TBSNAME}.SEQ_ADCONFIG_USER_MAPPER.NEXTVAL,
            #{id},
            #{userName},
            #{loginName}
        )
    </insert>

    <insert id="insertAdInfo">
       insert into
            ${TBSNAME}."mw_adAuthentic_mapper" (
            "id",
            "ad_ip_add",
            "ad_port",
            "ad_apartment_name",
            "update_time",
            "domain_name",
            "ad_account",
            "ad_passwd"
            )
        values (
            ${TBSNAME}.SEQ_ADAUTHENTIC_MAPPER.NEXTVAL,
            #{adServerIpAdd},
            #{adPort},
            #{adServerName},
            sysdate,
            #{domainName},
            #{adAdminAccount},
            #{adAdminPasswd}
            )
    </insert>

    <insert id="insertTempUser">
        insert into ${TBSNAME}."mw_ad_improtUser_temp_mapper" ("id","user_id","creator")
        values (
        ${TBSNAME}.SEQ_AD_IMPORT_USER_TEMP_MAPPER.NEXTVAL,
        #{userId},#{creator}
        )
    </insert>


    <insert id="insertTempConfig">
        insert into ${TBSNAME}."mw_ad_config_temp_mapper"("id","config_id","creator")
        values (
        ${TBSNAME}.SEQ_AD_CONFIG_TEMP_MAPPER.NEXTVAL,
        #{configId},#{creator}
        )
    </insert>

    <update id="updateUser">
        delete from
            ${TBSNAME}."mw_sys_user"
        where "login_name" = #{loginName}
        and "user_type" = #{userType}
    </update>

    <update id="truncateTempUser">
        truncate table ${TBSNAME}."mw_ad_improtUser_temp_mapper"
    </update>

    <update id="truncateTempConfig">
        truncate table ${TBSNAME}."mw_ad_config_temp_mapper"
    </update>

    <update id="truncateAuthent">
        truncate table ${TBSNAME}."mw_adAuthentic_mapper"
    </update>

    <delete id="deleteConfig">
        delete from
            ${TBSNAME}."mw_ad_info_mapper"
        where
            "id" = #{id}
    </delete>

    <delete id="deleteConfigUser">
        delete from ${TBSNAME}."mw_adconfig_user_mapper"
        where "id" in (
        <foreach collection="list" item="id" separator=",">
            #{id}
        </foreach>
        )
    </delete>

    <delete id="deleteByConfigList">
        delete from ${TBSNAME}."mw_ad_info_mapper"
        where "id" in
         (
        <foreach collection="list" item="configId" separator=",">
          #{configId}
        </foreach>
        )
    </delete>

    <delete id="deleteByLoginName">
        delete from ${TBSNAME}."mw_adconfig_user_mapper"
        where "login_name" in (
        <foreach collection="list" item="loginName" separator=",">
        #{loginName}
        </foreach>
        )
    </delete>

    <delete id="deleteADConfigUser">
        delete from
            ${TBSNAME}."mw_adconfig_user_mapper"
        where
            "config_id" = #{id}
    </delete>

    <select id="selectConfigInfo" resultType="cn.mw.monitor.user.model.MWADConfigUserDTO">
        SELECT
            a."login_name",
            a."user_name",
            b."user_state",
            b."user_id",
            a."id"
        FROM
            ${TBSNAME}."mw_adconfig_user_mapper" a,
            ${TBSNAME}."mw_sys_user" b
        WHERE
            a."config_id" = #{configId}
            AND a."login_name" = b."login_name"
            AND b."delete_flag" = 0
    </select>

    <select id="selectConfig" resultType="cn.mw.monitor.user.model.MWADInfoDTO">
        select
            "id",
            "ad_info",
            "local_info",
            "group_info",
            "search_nodes",
            "ad_type",
            "role_id",
            "group_id",
            "org_id",
            "config_desc"
        from
            ${TBSNAME}."mw_ad_info_mapper"
        where
            <include refid="whereSql"/>
    </select>

    <select id="select" resultType="cn.mw.monitor.user.model.ADConfigDTO">
        select "ad_ip_add" ldapIpAdd,"ad_port" ldapPort,"domain_name" domainName
        from ${TBSNAME}."mw_adAuthentic_mapper"
    </select>

    <select id="selectGroupUserById" resultType="cn.mw.monitor.service.user.model.MWUser">
        select
            a."login_name",
            a."user_name",
            b."user_state",
            b."user_id"
        from
            ${TBSNAME}."mw_adconfig_user_mapper" a,
            ${TBSNAME}."mw_sys_user" b
        where
            a."config_id" = #{configId}
            and a."login_name" = b."login_name"
            and b."delete_flag" = 0
    </select>

    <select id="selectSyAdInfo" resultType="cn.mw.monitor.user.dto.MwLdapAuthenticInfoDTO">
        SELECT
            	"ad_apartment_name" serverName,
                "ad_ip_add" ipAddress,
                "ad_port" PORT,
                "ad_account" adAccount,
                "ad_passwd" adPasswd
        FROM
	        ${TBSNAME}."mw_adAuthentic_mapper"
    </select>

    <select id="selectTempConfigId" resultType="java.lang.Integer">
        SELECT
            "config_id"
        FROM
            ${TBSNAME}."mw_ad_config_temp_mapper"
    </select>

    <select id="selectTempUserId" resultType="java.lang.Integer">
        SELECT
            "user_id"
        FROM
            ${TBSNAME}."mw_ad_improtUser_temp_mapper"
    </select>

    <select id="selectByADInfo" resultType="cn.mw.monitor.user.model.MWADInfoDTO">
        select
            "id",
            "ad_info",
            "local_info",
            "group_info",
            "search_nodes",
            "ad_type",
            "role_id",
            "group_id",
            "org_id"
        from
        ${TBSNAME}."mw_ad_info_mapper"
        where
        <include refid="whereSql"/>
        and
        "ad_info" = #{adInfo}
    </select>

    <select id="countByConfigId" resultType="java.lang.Integer">
        SELECT
            COUNT( 1 )
        FROM
            ${TBSNAME}."mw_adconfig_user_mapper"
        WHERE
            "config_id" = #{configId}
    </select>

    <update id="updateDesc">
        update ${TBSNAME}."mw_ad_info_mapper"
        set
            "config_desc" = #{desc}
        where "id" = #{id}
    </update>

    <delete id="deleteUserManager">
        DELETE
        FROM
            ${TBSNAME}."mw_ldap_user_manager_rel"
        WHERE
            "user_id" = #{userId}
    </delete>

    <insert id="insertUserManager">
        insert into ${TBSNAME}."mw_ldap_user_manager_rel"("user_id","manager_content")
        values (
        #{userId},#{userManager}
        )
    </insert>

    <select id="getUserManager" resultType="java.lang.String">
        select "manager_content"
        FROM
            ${TBSNAME}."mw_ldap_user_manager_rel"
        WHERE
            "user_id" = #{userId}
    </select>

    <select id="countAdRoleMapper" resultType="java.lang.Integer">
        SELECT
            COUNT( 1 ) AS "count"
        FROM
            "mw_ad_info_mapper"
        WHERE
            "role_id" = #{roleId}
    </select>
</mapper>