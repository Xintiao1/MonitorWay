<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mw.monitor.user.dao.MwCommonDao">

    <insert id="insertUserMapper">
        insert all
        <foreach collection="list" item="insertList" separator=" ">
            into ${TBSNAME}."mw_user_mapper"("type_id","user_id","type")
            values
            (#{insertList.typeId,jdbcType=VARCHAR},#{insertList.userId,jdbcType=INTEGER},#{insertList.type,jdbcType=VARCHAR})
        </foreach>
        SELECT
            1
        FROM
        dual
    </insert>

    <insert id="insertSuperiorUser">
        insert into ${TBSNAME}."mw_user_mapper"("type_id","user_id","type")
        select #{typeId,jdbcType=VARCHAR},#{userId,jdbcType=INTEGER},#{type,jdbcType=VARCHAR}
        from dual
        where not exists (select "user_id" from ${TBSNAME}."mw_user_mapper" where "user_id" =#{userId,jdbcType=INTEGER}
        and "type_id"=#{typeId,jdbcType=VARCHAR})
    </insert>

    <insert id="insertGroupMapper">
        insert all
        <foreach collection="list" item="insertList" separator=" ">
            into ${TBSNAME}."mw_group_mapper"("type_id","group_id","type")
            values
            (#{insertList.typeId,jdbcType=VARCHAR},#{insertList.groupId,jdbcType=INTEGER},#{insertList.type,jdbcType=VARCHAR})
        </foreach>
        SELECT
        1
        FROM
        dual
    </insert>

    <insert id="insertSuperiorGroup">
        insert into ${TBSNAME}."mw_group_mapper"("type_id","group_id","type")
        select #{typeId,jdbcType=VARCHAR},#{groupId,jdbcType=INTEGER},#{type,jdbcType=VARCHAR}
        from dual
        where not exists (select "group_id" from ${TBSNAME}."mw_group_mapper" where "group_id" =#{groupId,jdbcType=INTEGER}
        and "type_id"=#{typeId,jdbcType=VARCHAR})
    </insert>

    <insert id="insertOrgMapper">
        insert all
        <foreach collection="list" item="insertList" separator=" ">
            into ${TBSNAME}."mw_org_mapper"("type_id","org_id","type")
            values
            (#{insertList.typeId,jdbcType=VARCHAR},#{insertList.orgId,jdbcType=INTEGER},#{insertList.type,jdbcType=VARCHAR})
        </foreach>
        SELECT
            1
        FROM
        dual
    </insert>

    <insert id="insertSuperiorOrg">
        insert into ${TBSNAME}."mw_org_mapper"("type_id","org_id","type")
        select #{typeId,jdbcType=VARCHAR},#{orgId,jdbcType=INTEGER},#{type,jdbcType=VARCHAR}
        from dual
        where not exists (select "org_id" from ${TBSNAME}."mw_org_mapper" where "org_id" =#{orgId,jdbcType=INTEGER}
        and "type_id"=#{typeId,jdbcType=VARCHAR})
    </insert>

    <insert id="insertDataPermission" parameterType="cn.mw.monitor.service.user.dto.DataPermissionDto">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            select ${TBSNAME}.SEQ_DATA_PERMISSION.NEXTVAL AS "id" from dual
        </selectKey>
        insert into ${TBSNAME}."mw_datapermission"("id", "type","type_id","is_user","is_group","description")
        values(#{id},#{type},#{typeId},#{isUser},#{isGroup},#{description})
    </insert>

    <insert id="insertPermissionMapper" parameterType="cn.mw.monitor.service.user.dto.DataPermissionDto">
        insert into ${TBSNAME}."mw_datapermission"("id", "type","type_id","is_user","is_group","description")
        SELECT ${TBSNAME}.SEQ_DATA_PERMISSION.NEXTVAL,t.*
        FROM(
        <foreach collection="list" item="item" index="index" separator="UNION ALL">
            SELECT
            #{item.type,jdbcType=VARCHAR},
            #{item.typeId,jdbcType=VARCHAR},
            #{item.isUser,jdbcType=INTEGER},
            #{item.isGroup,jdbcType=INTEGER},
            #{item.description,jdbcType=VARCHAR}
            FROM DUAL
        </foreach>
        ) t
    </insert>

    <delete id="deleteUserMapper" parameterType="cn.mw.monitor.service.user.dto.DeleteDto">
        delete from ${TBSNAME}."mw_user_mapper"  where "type_id"=#{typeId,jdbcType=VARCHAR} and "type"=#{type,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteGroupMapper">
        delete from  ${TBSNAME}."mw_group_mapper"  where "type_id"=#{typeId,jdbcType=VARCHAR} and "type"=#{type,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteOrgMapper">
        delete from ${TBSNAME}."mw_org_mapper" where "type_id"=#{typeId,jdbcType=VARCHAR} and "type"=#{type,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteDataPermission">
        delete from ${TBSNAME}."mw_datapermission" where "type_id"=#{typeId,jdbcType=VARCHAR} and "type"=#{type,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteUserMappers" >
        delete from ${TBSNAME}."mw_user_mapper" where "type"=#{type,jdbcType=VARCHAR} and "type_id" in
        <foreach collection="typeIds" item="item" index="index" open="(" separator="," close=")">
           #{item}
        </foreach>
    </delete>
    <delete id="deleteGroupMappers">
        delete from  ${TBSNAME}."mw_group_mapper"  where "type"=#{type,jdbcType=VARCHAR} and "type_id" in
        <foreach collection="typeIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteOrgMappers">
        delete from ${TBSNAME}."mw_org_mapper" where "type"=#{type,jdbcType=VARCHAR} and "type_id" in
        <foreach collection="typeIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteDataPermissions">
        delete from ${TBSNAME}."mw_datapermission" where "type"=#{type,jdbcType=VARCHAR} and "type_id" in
        <foreach collection="typeIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <update id="updateDataPermission">
        update
        ${TBSNAME}."mw_datapermission"
        <set>
            <if test="isUser != null">
                "is_user" = #{isUser},
            </if>
            <if test="isUser != null">
                "is_group" = #{isGroup},
            </if>
        </set>
        where "type_id"=#{typeId,jdbcType=VARCHAR} and "type"=#{type,jdbcType=VARCHAR}
    </update>
    <update id="updateDataPermissions">
        update
            ${TBSNAME}."mw_datapermission"
            <set>
                <if test="isUser != null">
                    "is_user" = #{isUser},
                </if>
                <if test="isGroup != null">
                    "is_group" = #{isGroup},
                </if>
            </set>
        where "type"=#{type,jdbcType=VARCHAR} and "type_id" in
        <foreach collection="typeIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <select id="getOrgNameByTypeId" resultType="java.lang.String">
        select distinct t2."org_name" from ${TBSNAME}."mw_org_mapper" t1 left join ${TBSNAME}."mw_sys_org" t2 on t1."org_id"=t2."org_id"
        where "type"=#{type,jdbcType=VARCHAR} and "type_id"=#{typeId,jdbcType=VARCHAR}
    </select>

    <select id="getAllTypeIdList" resultType="java.lang.String">
        <if test="queryType == 0 or queryType == 1">
            <choose>
                <when test="dataPermission == 'PRIVATE'">
                    SELECT
                    DISTINCT
                    "type_id"
                    FROM
                    ${TBSNAME}."mw_user_mapper"
                    WHERE
                    "user_id" = #{userId}
                    AND "type" = #{dataType}
                </when>
                <otherwise>
                    SELECT
                    DISTINCT
                    "type_id"
                    FROM
                    ${TBSNAME}."mw_org_mapper"
                    WHERE
                    "type" = #{dataType}
                    AND "org_id" IN
                    <foreach collection="orgIdList" open="(" close=")" separator="," item="item" index="index">
                        #{item}
                    </foreach>
                </otherwise>
            </choose>
        </if>
        <if test="queryType == 0 or queryType == 2">
            <if test="userGroupIdList != null and userGroupIdList.size() > 0">
                <if test="queryType == 0">
                    UNION
                </if>
                SELECT
                DISTINCT
                "type_id"
                FROM
                ${TBSNAME}."mw_group_mapper"
                WHERE
                "type" = #{dataType}
                AND "group_id" IN
                <foreach collection="userGroupIdList" open="(" close=")" separator="," item="item" index="index">
                    #{item}
                </foreach>
            </if>
        </if>
    </select>

    <select id="getUserListByTypeId" resultType="java.lang.Integer">
        SELECT
        DISTINCT
            "user_id"
        FROM
            ${TBSNAME}."mw_user_mapper"
        WHERE
            "type_id" = #{typeId}
            AND "type" = #{dataType}
    </select>


    <select id="getUserListByDataType" resultType="java.lang.Integer">
        SELECT
        DISTINCT
            "user_id"
        FROM
            ${TBSNAME}."mw_user_mapper"
        WHERE
            "type" = #{dataType}
    </select>

    <select id="getUserListByTypeIds" resultType="java.util.Map">
        SELECT
        DISTINCT
            "type_id" AS "typeId",
            "user_id" AS "userId"
        FROM
            ${TBSNAME}."mw_user_mapper"
        WHERE
            "type_id" in
            <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
            AND "type" = #{dataType}
    </select>

    <select id="getGroupListByTypeId" resultType="java.lang.Integer">
        SELECT
            "group_id"
        FROM
            ${TBSNAME}."mw_group_mapper"
        WHERE
            "type_id" = #{typeId}
            AND "type" = #{dataType}
    </select>

    <select id="getGroupListByTypeIds" resultType="java.util.Map">
        SELECT
            "type_id" AS "typeId",
            "group_id" AS "groupId"
        FROM
            ${TBSNAME}."mw_group_mapper"
        WHERE
            "type_id" in
            <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
            AND "type" = #{dataType}
    </select>

    <select id="getOrgListByTypeId" resultType="cn.mw.monitor.service.user.dto.OrgDTO">
        SELECT
            t2."org_id" as "orgId",
            t2."org_name" as  "orgName",
            t2."nodes" as "nodes"
        FROM
            ${TBSNAME}."mw_org_mapper" t1
            LEFT JOIN ${TBSNAME}."mw_sys_org" t2 ON t1."org_id" = t2."org_id"
        WHERE
            t1."type_id" = #{typeId}
            AND t1."type" = #{dataType}
            and t2."delete_flag" = 0
    </select>

    <select id="getOrgListByTypeIds" resultType="java.util.Map">
        SELECT
            t1."type_id" AS "typeId",
            t2."org_id" as "orgId",
            t2."org_name" as "orgName",
            t2."nodes" as "nodes"
        FROM
            ${TBSNAME}."mw_org_mapper" t1
            LEFT JOIN ${TBSNAME}."mw_sys_org" t2 ON t1."org_id" = t2."org_id"
        WHERE
            t1."type_id" in
            <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
            AND t1."type" = #{dataType}
            and t2."delete_flag" = 0
    </select>

    <select id="getUserList" resultType="cn.mw.monitor.service.assets.model.UserDTO">
         select
         DISTINCT
            t1."user_id" as "userId",
            t1."login_name" as  "loginName",
            t1."user_name" as  "userName"
            from
            ${TBSNAME}."mw_sys_user" t1
            left join  ${TBSNAME}."mw_user_mapper" t2 on t1."user_id" = t2."user_id"
            where t2."type" = #{dataType} and t2."type_id" = #{typeId} and t1."delete_flag" = 0
    </select>

    <select id="getGroupList" resultType="cn.mw.monitor.service.assets.model.GroupDTO">
        select
            t1."group_id" as "groupId",
            t1."group_name" as "groupName"
        from ${TBSNAME}."mw_group_table"  t1
            left join ${TBSNAME}."mw_group_mapper" t2 on t1."group_id" = t2."group_id"
            where t2."type" = #{dataType} and t2."type_id" = #{typeId} and t1."delete_flag" = 0
    </select>

    <select id="getGroupListByIds" resultType="java.util.Map">
        SELECT
            t1."group_id" AS "groupId",
            t1."group_name" AS "groupName",
            t2."type_id" AS "typeId"
        FROM
            ${TBSNAME}."mw_group_mapper" t2
        LEFT JOIN ${TBSNAME}."mw_group_table" t1 ON t1."group_id" = t2."group_id"
        where t2."type" = #{dataType}
             and t2."type_id" in
            <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
             and t1."delete_flag" = 0
    </select>

    <select id="getUserListByIds" resultType="java.util.Map">
        SELECT
        DISTINCT
            t1."user_id" AS "userId",
            t1."login_name" AS "loginName",
            t1."user_name" AS "userName",
            t2."type_id" AS "typeId"
        FROM
            ${TBSNAME}."mw_user_mapper" t2
            LEFT JOIN ${TBSNAME}."mw_sys_user" t1 ON t1."user_id" = t2."user_id"
            where t2."type" = #{dataType}
            and t2."type_id" in
            <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
            and t1."delete_flag" = 0
    </select>

    <update id="changeUserDataPermission">
        update ${TBSNAME}."mw_user_mapper" set
        "user_id" = #{changedUserId}
        where "user_id" = #{userId} and "type" = #{dataType}
    </update>

    <select id="countUserType" resultType="java.lang.Integer">
        SELECT
            count(1) as countNumber
        FROM
            ${TBSNAME}."mw_user_mapper"
        WHERE
            "user_id" = #{userId}
            AND "type" in
            <foreach collection="list" open="(" close=")" item="item" index="index" separator=",">
                #{item}
            </foreach>
    </select>
</mapper>
