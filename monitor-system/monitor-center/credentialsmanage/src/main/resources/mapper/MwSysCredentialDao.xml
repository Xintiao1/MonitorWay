<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mw.monitor.credential.dao.MwSysCredentialDao">
  <resultMap id="BaseResultMap" type="cn.mw.monitor.credential.model.MwSysCredential">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mw_account" jdbcType="VARCHAR" property="mwAccount" />
    <result column="mw_passwd" jdbcType="VARCHAR" property="mwPasswd" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="module" jdbcType="VARCHAR" property="module" />
    <result column="module_id" jdbcType="VARCHAR" property="moduleId" />
    <result column="cred_desc" jdbcType="VARCHAR" property="credDesc" />
    <result column="cred_details" jdbcType="VARCHAR" property="credDetails" />
  </resultMap>

  <resultMap id="ListResultMapTwo" type="java.util.HashMap">
    <result property="key" column="credDetails"/>
    <result property="value" column="passwd"/>
  </resultMap>

  <sql id="Base_Column_List">
    id,mw_account, mw_passwd, creator, `module`,module_id,cred_desc,cred_details
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mw_sys_credential
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="select" resultMap="BaseResultMap">
    select
      TB_CREDENTIAL.id,
      TB_CREDENTIAL.mw_account,
      TB_CREDENTIAL.mw_passwd,
      TB_CREDENTIAL.creator,
      TB_CREDENTIAL.`module`,
      TB_CREDENTIAL.module_id,
      TB_CREDENTIAL.cred_desc,
      TB_CREDENTIAL.cred_details
    from mw_sys_credential TB_CREDENTIAL
    <if test="systemUser == false">
      WHERE
      TB_CREDENTIAL.id IN
      <foreach collection="list" separator="," open="(" close=")" index="index" item="item">
        #{item}
      </foreach>
    </if>
    ORDER BY TB_CREDENTIAL.id desc
  </select>
  <select id="selectCredDropDown" resultMap="ListResultMapTwo">
    select
      TB_CREDENTIAL.cred_details credDetails,
      TB_CREDENTIAL.mw_passwd passwd
    from mw_sys_credential TB_CREDENTIAL
    <choose>
      <when test="map.systemUser == false">
        WHERE
        TB_CREDENTIAL.id IN
        <foreach collection="map.list" separator="," open="(" close=")" index="index" item="item">
          #{item}
        </foreach>
        <if test="map.moduleId != null">
          and FIND_IN_SET(#{map.moduleId,jdbcType=INTEGER},TB_CREDENTIAL.module_id)
        </if>
      </when>
      <otherwise>
        where 1=1
        <if test="map.moduleId != null">
          and FIND_IN_SET(#{map.moduleId,jdbcType=INTEGER},TB_CREDENTIAL.module_id)
        </if>
      </otherwise>
    </choose>
  </select>
  <select id="selectAllModules" resultType="cn.mw.monitor.credential.common.MwModulesDTO">
    select
        id moduleId ,module_desc `module`
    from mw_module
    where delete_flag = false
    and pid = 0
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mw_sys_credential
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.mw.monitor.credential.model.MwSysCredential" useGeneratedKeys="true">
    insert into mw_sys_credential
        (mw_account, mw_passwd, creator, `module`,module_id,cred_desc,cred_details)
    values (#{mwAccount,jdbcType=VARCHAR}, #{mwPasswd,jdbcType=LONGVARCHAR}, #{creator,jdbcType=VARCHAR},
      #{module,jdbcType=VARCHAR},#{moduleId,jdbcType=VARCHAR}, #{credDesc,jdbcType=VARCHAR}, #{credDetails,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.mw.monitor.credential.model.MwSysCredential" useGeneratedKeys="true">
    insert into mw_sys_credential
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mwAccount != null">
        mw_account,
      </if>
      <if test="mwPasswd != null">
        mw_passwd,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="module != null">
        `module`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mwAccount != null">
        #{mwAccount,jdbcType=VARCHAR},
      </if>
      <if test="mwPasswd != null">
        #{mwPasswd,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="module != null">
        #{module,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.mw.monitor.credential.model.MwSysCredential">
    update mw_sys_credential
    <set>
      <if test="mwAccount != null">
        mw_account = #{mwAccount,jdbcType=VARCHAR},
      </if>
      <if test="mwPasswd != null">
        mw_passwd = #{mwPasswd,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="module != null">
        `module` = #{module,jdbcType=VARCHAR},
      </if>
      <if test="credDesc != null">
        cred_desc = #{credDesc,jdbcType=VARCHAR},
      </if>
      <if test="credDetails != null">
        cred_details = #{credDetails,jdbcType=VARCHAR},
      </if>
      <if test="moduleId != null">
        module_id = #{moduleId,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.mw.monitor.credential.model.MwSysCredential">
    update mw_sys_credential
    set mw_account = #{mwAccount,jdbcType=VARCHAR},
      mw_passwd = #{mwPasswd,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      `module` = #{module,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>