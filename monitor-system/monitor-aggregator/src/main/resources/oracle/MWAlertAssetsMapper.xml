<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mw.monitor.alert.dao.MWAlertAssetsDao">
    <select id="getHostIds" resultType="java.lang.String">
        select "assets_id" from ${TBSNAME}."mw_tangibleassets_table"
		where  "monitor_flag"=1 and "delete_flag"=0
    </select>

    <select id="getHostIdsByUserId" resultType="java.lang.String">
        select a."assets_id" from ${TBSNAME}."mw_tangibleassets_table" a
		left join ${TBSNAME}."mw_user_assets_mapper" b on
		a."id" = b."assets_id"
		left join ${TBSNAME}."mw_sys_user" c on c."user_id" =b."user_id"
		where  a."monitor_flag"=1 and a."delete_flag"=0 and c."delete_flag"=0 and
		c."user_id"=#{userId}
    </select>
    <select id="getUserIds" resultType="java.lang.Integer">
      select "user_id" from ${TBSNAME}."mw_sys_user" where "user_state"='ACTIVE' and "delete_flag"=0
    </select>
    <select id="getAssetsById" resultType="cn.mw.monitor.service.alert.dto.AssetsDto">
        select
        a."id",
        a."assets_id"                as "assetsId",
        a."assets_name"              as "assetsName",
        a."in_band_ip"               as "assetsIp",
        b."type_name"                as "assetsType",
        a."monitor_server_id"        as "monitorServerId",
        c."monitoring_server_name"   as "monitorServerName"
        from ${TBSNAME}."mw_tangibleassets_table" a
		left join ${TBSNAME}."mw_assetssubtype_table" b on a."assets_type_id"=b."id"
		left join ${TBSNAME}."mw_thirdparty_server_table" c on a."monitor_server_id"=c."id"
		where  a."delete_flag"=0 and c."delete_flag"=0 and
		a."assets_id"=#{assetsId}
		and a."monitor_server_id"=#{monitorServerId}
    </select>



    <select id="getCountByUserIdAndTypeId" resultType="java.lang.Integer">
      select count(0) from ${TBSNAME}."mw_tangibleassets_table" a
		left join ${TBSNAME}."mw_user_assets_mapper" b on
		a."assets_id" = b."assets_id"
		left join ${TBSNAME}."mw_sys_user" c on c."user_id"=b."user_id"
		left join ${TBSNAME}."mw_assetssubtype_table" d on a."assets_type_id"=d."id"
		where c."user_id"=#{userId} and d."id"=#{assertTypeId}
		and a."monitor_flag"=1 and d."enable"='ACTIVE' and c."user_state"=1
    </select>
    <select id="getAssetsNameById" resultType="java.lang.String">
        select a."assets_name"
        from ${TBSNAME}."mw_tangibleassets_table" a
		where a."id"=#{assetsId}
    </select>
    <select id="getAssetsNameAndIPById" resultType="java.util.HashMap">
        select "assets_name" as "name","in_band_ip" as "ip"
        from ${TBSNAME}."mw_tangibleassets_table"
		where "assets_id"=#{assetsId} and "monitor_server_id"=#{monitorServerId}
    </select>
    <select id="getServerIds" resultType="java.lang.Integer">
        SELECT DISTINCT "monitor_server_id" FROM
	    ${TBSNAME}."mw_tangibleassets_table"
        WHERE
	    "delete_flag" = 0 and "monitor_flag"=1
    </select>
    <select id="getWebMonitor" resultType="java.util.Map">
        select
        "web_name" "webName", "web_url" "webUrl"
        from ${TBSNAME}."mw_webmonitor_table" where "host_id"=#{id,jdbcType=VARCHAR} and "enable"='ACTIVE'
    </select>
    <select id="getLink" resultType="java.util.Map">
         select
         "link_name" "linkName"
        from ${TBSNAME}."mw_network_link" where "delete_flag"=0 and "enable"='ACTIVE' and
        (
        ( "target_assets_id"=#{hostId} and "target_server_id"=#{monitorServerId })
        or
        ("root_assets_id"=#{hostId} and "root_server_id"=#{monitorServerId })
        )


    </select>

    <select id="getSendInfo" resultType="cn.mw.monitor.accountmanage.entity.AlertRecordTableDTO" parameterType="cn.mw.monitor.service.alert.dto.RecordParam">
        select * from (
        SELECT
            t."id",
            t."date",
            t."method",
            TO_CHAR(t."text") as "text",
            t."is_success" AS "isSuccess",
            t."hostid",
            t."eventid" as "eventId",
            TO_CHAR(t."error") as "error",
            t."title",
            t."ip"
            FROM
            ${TBSNAME}."mw_alert_record_table" t
            where
            t."date" >= sysdate - 7

            <if test="isToday">
                AND t."date" >= sysdate
            </if>
            <if test="sendState == 1">
                AND t."is_success" = 0
            </if>
            <if test="sendState == 0">
                AND t."is_success" != 0;
            </if>
            <if test="eventid != null and eventid != ''">
                AND t."eventid" = #{eventid}
            </if>
            ORDER BY t."date" desc
        ) where 1000 >= rownum
    </select>

    <select id="selectCountRecordTable" resultType="java.lang.Integer">
        select count(*) from "mw_alert_record_table"
        <if test="endTime != null and endTime != ''">
            where TO_DATE(#{endTime}, 'yyyy-MM-dd') >= "date" and  "date" >= TO_DATE(#{startTime}, 'yyyy-MM-dd')
        </if>

    </select>

    <select id="getSendInfoList" resultType="cn.mw.monitor.accountmanage.entity.AlertRecordTableDTO" parameterType="cn.mw.monitor.service.alert.dto.RecordParam">
        SELECT B.* FROM(

                           SELECT A.*,ROWNUM AS RN
                           FROM

                               (SELECT
                                    t."id",
                                    t."date",
                                    t."method",
                                    t."is_success" AS "isSuccess",
                                    t."hostid",
                                    TO_CHAR(t."text") as "text",
                                    t."eventid" as "eventId",
                                    t."title",
                                    t."ip"
                                FROM
                                    "mw_alert_record_table" t
                                <if test="endTime != null and endTime != ''">
                                    where TO_DATE(#{endTime}, 'yyyy-MM-dd') >= t."date" and  t."date" >= TO_DATE(#{startTime}, 'yyyy-MM-dd')
                                </if>
                                ORDER BY t."date" desc) A
                       )B
                   where #{endNum} >= B.RN and B.RN >= #{startNum}
    </select>

    <delete id="deleteRecord">
        delete from  "mw_alert_record_table" where #{date} >= "date"
    </delete>

    <delete id="deleteRecordInfo">
        DELETE
        FROM
            "mw_alert_record_table"
        WHERE
                "id" IN ( SELECT "id" FROM ( SELECT "id", ROWNUM AS rn FROM "mw_alert_record_table" ORDER BY "date" DESC ) WHERE rn > 1000 )
    </delete>

    <select id="getAssetsByIds" resultType="cn.mw.monitor.service.alert.dto.AssetsDto">
        select
        a."id",
        a."assets_id"                as "assetsId",
        a."assets_name"              as "assetsName",
        a."in_band_ip"               as "assetsIp",
        b."type_name"                as "assetsType",
        a."monitor_server_id"        as "monitorServerId",
        c."monitoring_server_name"   as "monitorServerName"
        from ${TBSNAME}."mw_tangibleassets_table" a
        left join ${TBSNAME}."mw_assetssubtype_table" b on a."assets_type_id"=b."id"
        left join ${TBSNAME}."mw_thirdparty_server_table" c on a."monitor_server_id"=c."id"
        where  a."delete_flag"=0 and c."delete_flag"=0 and
        a."assets_id" in (
        <foreach collection="assetsIds" item="list" separator=",">
            #{list}
        </foreach>
        )
    </select>

    <select id="getMonitorServerName" resultType="java.util.Map">
        select "id" , "monitoring_server_name" as "monitorServerName"
        from ${TBSNAME}."mw_thirdparty_server_table"
        where "delete_flag" = 0
    </select>

    <insert id="insertAlertSolutionTable" parameterType="cn.mw.monitor.service.alert.dto.AlertReasonEditorParam">
        insert into ${TBSNAME}."mw_alert_solution_table" (
        <if test="triggerReason != null and triggerReason != ''">
            "trigger_reason",
        </if>
        <if test="solution != null and solution != ''">
            "solution",
        </if>
        "event_id",
        "server_id",
        "create_date"
        )values (
        <if test="triggerReason != null and triggerReason != ''">
            #{triggerReason},
        </if>
        <if test="solution != null and solution != ''">
            #{solution},
        </if>
        #{eventId},
        #{monitorServerId},
        sysdate
        )
    </insert>

    <update id="updateAlertSolutionTable" parameterType="cn.mw.monitor.service.alert.dto.AlertReasonEditorParam">
        update ${TBSNAME}."mw_alert_solution_table" set
        <if test="triggerReason != null and triggerReason != ''">
            "trigger_reason" = #{triggerReason},
        </if>
        <if test="solution != null and solution != ''">
            "solution" = #{solution},
        </if>
        "create_date" = sysdate
        where "event_id" = #{eventId} and "server_id" = #{monitorServerId}
    </update>

    <select id="selectCountAlertSolutionTable" parameterType="cn.mw.monitor.service.alert.dto.AlertReasonEditorParam" resultType="java.lang.Integer">
        select count(*)
        from ${TBSNAME}."mw_alert_solution_table"
        where "event_id" = #{eventId} and "server_id" = #{monitorServerId}
    </select>

    <select id="selectAlertSolutionTable" parameterType="cn.mw.monitor.service.alert.dto.AlertReasonEditorParam" resultType="cn.mw.monitor.service.alert.dto.AlertReasonEditorParam">
        select "solution" as "solution",
        "trigger_reason" as "triggerReason"
        from ${TBSNAME}."mw_alert_solution_table"
        where "event_id" = #{eventId} and "server_id" = #{monitorServerId}
    </select>

    <insert id="insertConfirmUserTable" parameterType="cn.mw.monitor.service.alert.dto.AlertConfirmUserParam">
        insert into ${TBSNAME}."mw_alert_confirm_user_table" (
        "confirm_date",
        "user_id",
        "event_id",
        "server_id"
        )values (
        sysdate,
        #{userId},
        #{eventId},
        #{monitorServerId}
        )
    </insert>

    <insert id="insertConfirmUserTables" parameterType="java.util.List">
        insert into ${TBSNAME}."mw_alert_confirm_user_table" (
        "confirm_date",
        "user_id",
        "event_id",
        "server_id"
        )
        <foreach collection="list" item="item" index="index" separator="union all">
            select sysdate,#{item.userId},#{item.eventId},#{item.monitorServerId} from dual
        </foreach>
    </insert>

    <select id="selectListAlertSolutionTable"  resultType="cn.mw.monitor.service.alert.dto.AlertReasonEditorParam">
        select "solution" as "solution",
        "trigger_reason" as "triggerReason",
        "event_id" as "eventId",
        "server_id" as "monitorServerId"
        from ${TBSNAME}."mw_alert_solution_table"
        where
        3000 >= ROWNUM order by "create_date" desc
    </select>

    <select id="selectConfirmUserList"  resultType="cn.mw.monitor.service.alert.dto.AlertConfirmUserParam">
        select
        t."event_id" as "eventId",
        t."server_id" as "monitorServerId",
        t1."user_name" as "userName"
        from ${TBSNAME}."mw_alert_confirm_user_table" t
        left join ${TBSNAME}."mw_sys_user" t1 on t1."user_id" = t."user_id"
        where
         3000 >= ROWNUM order by "confirm_date" desc
    </select>

    <select id="selectBussinessAlarmInfo"  resultType="cn.mw.monitor.service.alert.dto.BussinessAlarmInfoParam">
       select DBID as "dbid",
       STATUS as "status",
       IP as "ip",
       BUSSINESS_NAME as "bussinessName",
       CONTENT as "content",
       ALARM_LEVEL as "alarmLevel",
       CREATE_TIME as "createTime",
       ALARM_EVENT_NAME as "alarmEventName"
       from BUSSINESS_ALARM_INFO
       where STATUS in (0,1,3,5) and (IS_SEND != 1 or IS_SEND IS NULL)
    </select>

    <select id="selectBussinessAlarmInfoById"  resultType="cn.mw.monitor.service.alert.dto.BussinessAlarmInfoParam">
       select DBID as "dbid",
       STATUS as "status",
       IP as "ip",
       BUSSINESS_NAME as "bussinessName",
       CONTENT as "content",
       ALARM_LEVEL as "alarmLevel",
       CREATE_TIME as "createTime",
       ALARM_EVENT_NAME as "alarmEventName"
       from BUSSINESS_ALARM_INFO
       where DBID = #{dbid}
    </select>

    <update id="updateBussinessAlarmInfo" parameterType="cn.mw.monitor.service.alert.dto.BussinessAlarmInfoParam">
        update "BUSSINESS_ALARM_INFO" set
        <if test="tableContent != null">
            TABLE_CONTENT = #{tableContent},
        </if>
        <if test="isSend != null">
            IS_SEND = #{isSend},
        </if>
        <if test="alarmEventName != null">
            ALARM_EVENT_NAME = #{alarmEventName},
        </if>
        <if test="severity != null">
            SEVERITY = #{severity},
        </if>
        <if test="alertType != null">
            ALERT_TYPE = #{alertType},
        </if>
        <if test="modelSystem != null">
            MODEL_SYSTEM = #{modelSystem},
        </if>
        <if test="modelClassify != null">
            MODEL_CLASSIFY = #{modelClassify},
        </if>
        <if test="objectName != null">
            OBJECT_NAME = #{objectName},
        </if>
        STATUS = #{status},
        UPDAT_TIME = sysdate
        where DBID = #{dbid}
    </update>

    <select id="getHuaXingAlert"  resultType="cn.mw.monitor.service.alert.dto.ZbxAlertDto">
        select B.*
        from (select A.*, ROWNUM AS RN
              from (select "starts_at"      as "clock",
                           "ends_at"        as "rclock",
                           "status"         as "acknowledged",
                           "severity"       as "severity",
                           "alert_name"     as "name",
                           "duration"       as "longTime",
                           "project_name"   as "objectName",
                           "ip"             as "ip",
                           "alert_type"     as "alertType",
                           "model_classify" as "modelClassify",
                           "model_system"   as "modelSystem",
                           "event_id"       as "eventid",
                           "create_date"    as "createDate"
                    from ${TBSNAME}."mw_huaxing_alert_table"
                    where TO_DATE(REPLACE(SUBSTR(trim("starts_at"), 0, 10), '.', '-'), 'yyyy-MM-dd') >=
                          sysdate - 7
                    order by "createDate" desc) A
              )B
        where #{endNum} >= B.RN and B.RN >= #{startNum}
    </select>

    <select id="getHuaXingAlertCount"  resultType="java.lang.Integer">
        select count(*)
        from ${TBSNAME}."mw_huaxing_alert_table"
        where TO_DATE(REPLACE(SUBSTR(trim("starts_at"), 0, 10),'.','-'), 'yyyy-MM-dd') >= sysdate - 7
    </select>

    <delete id="deleteHuaXingAlert" parameterType="java.lang.String">
        delete from "mw_huaxing_alert_table" where  TO_DATE(#{date}, 'yyyy-MM-dd') >= TO_DATE(REPLACE(SUBSTR(trim("starts_at"), 0, 10),'.','-'), 'yyyy-MM-dd')
    </delete>

    <select id="getHuaxingBuAlert"  resultType="cn.mw.monitor.service.alert.dto.ZbxAlertDto">
        select b.* from(
        select a.*,ROWNUM AS RN from(
            select CREATE_TIME as "clock",
                   UPDAT_TIME as "rclock",
                   (CASE STATUS
                        WHEN '0' THEN
                            '告警'
                        ELSE
                            '恢复'
                       END) as "acknowledged",
                   ALARM_EVENT_NAME as "name",
                   0 as "longTime",
                   IP as "ip",
                   SEVERITY as "severity",
                   MODEL_SYSTEM as "modelSystem",
                   MODEL_CLASSIFY as "modelClassify",
                   OBJECT_NAME as "objectName",
                   ALERT_TYPE as "alertType",
                   DBID as "eventid"
            from ${TBSNAME}."BUSSINESS_ALARM_INFO"
            where STATUS = '0' or STATUS = '1' and CREATE_TIME >= sysdate - 7
                                    )a
                       )b
        where #{endNum} >= B.RN and B.RN >= #{startNum}
    </select>

    <select id="getHuaxingBuAlertCount"  resultType="java.lang.Integer">
        select count(*)
        from ${TBSNAME}."BUSSINESS_ALARM_INFO"
        where STATUS = '0' or STATUS = '1' and CREATE_TIME >= sysdate - 7
    </select>

    <delete id="deleteHuaxingBuAlert" parameterType="java.lang.String">
        delete from "BUSSINESS_ALARM_INFO" where TO_DATE(#{date}, 'yyyy-MM-dd') >= TO_DATE(TO_CHAR(CREATE_TIME,'yyyy-MM-dd'), 'yyyy-MM-dd')
    </delete>

    <select id="getAlertRecordUserIdsList" resultType="cn.mw.monitor.accountmanage.entity.AlertRecordTableDTO">
        SELECT B.* FROM(

        SELECT A.*,ROWNUM AS RN
        FROM

        (select t."id",
        t."user_id" as "userId",
        t1."user_name" as "userName"
        from "mw_alert_record_user_mapper" t
        left join ${TBSNAME}."mw_sys_user" t1 on t1."user_id" = t."user_id"
        ) A
        )B
        where #{endNum} >= B.RN and B.RN >= #{startNum}
    </select>




    <select id="getAlertRecordUserIdsCount" resultType="java.lang.Integer">
        select count(*)
        from "mw_alert_record_user_mapper" t
        left join ${TBSNAME}."mw_sys_user" t1 on t1."user_id" = t."user_id"
        where
    </select>

    <select id="getAlertRecordUserIds" resultType="cn.mw.monitor.accountmanage.entity.AlertRecordTableDTO">
        select t."id",
        t."user_id" as "userId",
        t1."user_name" as "userName"
        from "mw_alert_record_user_mapper" t
        left join ${TBSNAME}."mw_sys_user" t1 on t1."user_id" = t."user_id"
        where "id" in (
        <foreach collection="ids" item="list" separator=",">
            #{list}
        </foreach>
        ) and 1000 >= ROWNUM
    </select>

    <insert id="insertTriggercloseTable" parameterType="java.util.List">
        insert into "mw_alert_trigger_close_table"("server_id","trigger_id","close_date","operator") values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.monitorServerId},#{item.objectId},sysdate,#{item.operatorId})
        </foreach>
    </insert>

    <delete id="deleteTriggercloseTable" parameterType="java.util.List">
        delete from "mw_alert_trigger_close_table" where
        <foreach collection="list" item="item" index="index" separator="or">
            ("server_id" = #{item.monitorServerId} and "trigger_id" = #{item.objectId})
        </foreach>
    </delete>

    <select id="getTriggercloseTableTriggerIds" resultType="cn.mw.monitor.service.zbx.param.CloseDto">
        select t."trigger_id" as "objectId",
               t."server_id" as "monitorServerId",
               t."close_date" as "closeDate",
               t1."user_name" as "userName"
        from "mw_alert_trigger_close_table" t
        left join "mw_sys_user" t1 on t1."user_id" = t."operator"
    </select>

    <insert id="insertIgnoreTable" parameterType="java.util.List">
        insert into "mw_alert_ignore_table"("id","server_id","event_id","ignore_date","operator","name") values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id},#{item.monitorServerId},#{item.eventid},sysdate,#{item.operatorId},#{item.name})
        </foreach>
    </insert>

    <select id="selectIgnoreTable" resultType="cn.mw.monitor.service.zbx.param.IgnoreAlertDto">
        select t."id" as "id",
               t."server_id" as "monitorServerId",
               t."event_id" as "eventid",
               t1."user_name" as "userName",
               t."name" as "name",
               t."ignore_date" as "ignoreDate"
        from "mw_alert_ignore_table" t
                 left join "mw_sys_user" t1 on t1."user_id" = t."operator"
    </select>

    <delete id="deleteIgnoreTable" parameterType="java.util.List">
        delete from "mw_alert_ignore_table" where "id" in (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item.id}
        </foreach>
        )
    </delete>

</mapper>
