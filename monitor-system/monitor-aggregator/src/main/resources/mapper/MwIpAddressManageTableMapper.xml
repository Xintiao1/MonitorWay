<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mw.monitor.ipaddressmanage.dao.MwIpAddressManageTableDao">

    <resultMap id="BaseResultMap" type="cn.mw.monitor.ipaddressmanage.param.IpAddressManageTableParam">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="parent_id" jdbcType="INTEGER" property="parentId" />
        <result column="label" jdbcType="VARCHAR" property="label" />
        <result column="descri" jdbcType="VARCHAR" property="descri" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="ip_addresses" jdbcType="VARCHAR" property="ipAddresses" />
        <result column="leaf" jdbcType="VARCHAR" property="leaf" />
        <result column="is_include" jdbcType="INTEGER" property="include" />
        <result column="mask" jdbcType="VARCHAR" property="mask" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="modifier" jdbcType="VARCHAR" property="modifier" />
        <result column="modification_date" jdbcType="TIMESTAMP" property="modificationDate" />
        <result column="use_count" jdbcType="INTEGER" property="useCount" />
        <result column="notuse_count" jdbcType="INTEGER" property="notuseCount" />
        <result column="reserved_count" jdbcType="INTEGER" property="reservedCount" />
        <result column="online" jdbcType="INTEGER" property="online" />
        <result column="offline" jdbcType="INTEGER" property="offline" />
        <result column="timing" jdbcType="INTEGER" property="timing" />
        <result column="country" jdbcType="VARCHAR" property="country" />
        <result column="state" jdbcType="VARCHAR" property="state" />
        <result column="city" jdbcType="VARCHAR" property="city" />
        <result column="region" jdbcType="VARCHAR" property="region" />
        <result column="address_desc" jdbcType="VARCHAR" property="addressDesc" />
        <result column="longitude" jdbcType="VARCHAR" property="longitude" />
        <result column="latitude" jdbcType="VARCHAR" property="latitude" />
        <result column="radio_status" jdbcType="VARCHAR" property="radioStatus" />
        <result column="index_sort" jdbcType="INTEGER" property="indexSort" />
        <collection property="principal" ofType="cn.mw.monitor.ipaddressmanage.dto.UserDTO" select="selectUser" column="id">
            <result property="userId" jdbcType="INTEGER" column="userId"/>
            <result property="userName" jdbcType="VARCHAR" column="userName"/>
            <result property="loginName" jdbcType="VARCHAR" column="loginName"/>
        </collection>
        <collection property="orgIds" ofType="cn.mw.monitor.ipaddressmanage.dto.OrgDTO" select="selectOrg" column="id">
            <result property="orgId" jdbcType="INTEGER" column="orgId"/>
            <result property="orgName" jdbcType="VARCHAR" column="orgName"/>
            <result property="nodes" jdbcType="VARCHAR" column="nodes"/>
        </collection>
        <collection property="groupIds" ofType="cn.mw.monitor.ipaddressmanage.dto.GroupDTO" select="selectGroup" column="id">
            <result property="groupId" jdbcType="INTEGER" column="groupId"/>
            <result property="groupName" jdbcType="VARCHAR" column="groupName"/>
        </collection>
        <collection property="labels" ofType="cn.mw.monitor.ipaddressmanage.dto.LabelDTO" select="selecLabels" column="id">
            <result property="labelId" jdbcType="INTEGER" column="labelId"/>
            <result property="labelName" jdbcType="VARCHAR" column="labelName"/>
        </collection>
        <collection property="geoIp" ofType="cn.mw.monitor.ipaddressmanage.dto.PubIpDto" select="selecPubIp" column="id">
            <result property="longitude" jdbcType="VARCHAR" column="longitude"/>
            <result property="latitude" jdbcType="VARCHAR" column="latitude"/>
        </collection>
    </resultMap>

    <resultMap id="BaseResultMap1" type="cn.mw.monitor.ipaddressmanage.param.IpAddressManageTable1Param">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="parent_id" jdbcType="INTEGER" property="parentId" />
        <result column="label" jdbcType="VARCHAR" property="label" />
        <result column="descri" jdbcType="VARCHAR" property="descri" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="ip_addresses" jdbcType="VARCHAR" property="ipAddresses" />
        <result column="leaf" jdbcType="VARCHAR" property="leaf" />
        <result column="mask" jdbcType="VARCHAR" property="mask" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="modifier" jdbcType="VARCHAR" property="modifier" />
        <result column="modification_date" jdbcType="TIMESTAMP" property="modificationDate" />
        <result column="use_count" jdbcType="INTEGER" property="useCount" />
        <result column="notuse_count" jdbcType="INTEGER" property="notuseCount" />
        <result column="reserved_count" jdbcType="INTEGER" property="reservedCount" />
        <result column="online" jdbcType="INTEGER" property="online" />
        <result column="offline" jdbcType="INTEGER" property="offline" />
        <result column="is_include" jdbcType="INTEGER" property="include" />
        <result column="country" jdbcType="VARCHAR" property="country" />
        <result column="state" jdbcType="VARCHAR" property="state" />
        <result column="city" jdbcType="VARCHAR" property="city" />
        <result column="region" jdbcType="VARCHAR" property="region" />

        <result column="address_desc" jdbcType="VARCHAR" property="addressDesc" />
        <result column="longitude" jdbcType="VARCHAR" property="longitude" />
        <result column="latitude" jdbcType="VARCHAR" property="latitude" />
        <result column="radio_status" jdbcType="VARCHAR" property="radioStatus" />
        <result column="index_sort" jdbcType="INTEGER" property="indexSort" />
        <result column="create_ip" jdbcType="INTEGER" property="createIp" />
        <collection property="principal" ofType="java.lang.Integer" select="selectUser1" column="id">
        </collection>
        <collection property="orgIdss" ofType="java.util.List" select="selectOrg1" column="id">
        </collection>
        <collection property="groupIds" ofType="java.lang.Integer" select="selectGroup1" column="id">
        </collection>
        <collection property="labels" ofType="java.lang.Integer" select="selecLabels1" column="id">
        </collection>
    </resultMap>

    <select id="selectUser1" parameterType="java.lang.String" resultType="java.lang.Integer">
    select
    t2.user_id userId
    from
    mw_user_mapper t1
    left join mw_sys_user t2 on t1.user_id = t2.user_id
    where t1.type='IP' and t1.type_id = #{id,jdbcType=VARCHAR}
  </select>

    <select id="selecPubIp" parameterType="java.lang.Integer" resultType="cn.mw.monitor.ipaddressmanage.dto.PubIpDto">
    select longitude,latitude from mw_pubipaddress_table
    where link_id=#{id,jdbcType=INTEGER}
  </select>

    <select id="selectOrg1" parameterType="java.lang.String" resultType="java.lang.Integer">
    select
    t2.org_id orgId
    from mw_org_mapper t1
    left join mw_sys_org t2 on t1.org_id = t2.org_id
    where t1.type='IP' and t1.type_id = #{id,jdbcType=VARCHAR}
  </select>

    <select id="selectOrg2" parameterType="java.lang.Integer" resultType="java.lang.String">
        select nodes from mw_sys_org where org_id in
        <foreach collection="orgIds" item="item" index="index" open="(" separator="," close=")">
            #{item.value,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="selectGroup1" parameterType="java.lang.String" resultType="java.lang.Integer">
    select
    t1.group_id  groupId
    from mw_group_mapper t1
    left join mw_group_table t2 on t1.group_id = t2.group_id
    where t1.type='IP' and t1.type_id = #{id,jdbcType=VARCHAR}
  </select>

    <select id="selecLabels1" parameterType="java.lang.String" resultType="java.lang.Integer">
    select
    t1.label_id  labelId
    from mw_ip_label_link_mapper t1
    left join mw_labelmanage_table t2 on t1.label_id = t2.label_id
    where  t2.delete_flag= 0 and t1.link_id = #{id,jdbcType=VARCHAR}
  </select>

    <select id="selectUser" parameterType="java.lang.String" resultType="cn.mw.monitor.ipaddressmanage.dto.UserDTO">
    select
    t2.user_id userId,
    t2.login_name loginName,
    t2.user_name userName
    from
    mw_user_mapper t1
    left join mw_sys_user t2 on t1.user_id = t2.user_id
    where t1.type='IP' and t1.type_id = #{id,jdbcType=VARCHAR}
  </select>

    <select id="selectOrg" parameterType="java.lang.String" resultType="cn.mw.monitor.ipaddressmanage.dto.OrgDTO">
    select
    t2.org_id orgId,
    t2.org_name orgName,
    t2.nodes
    from mw_org_mapper t1
    left join mw_sys_org t2 on t1.org_id = t2.org_id
    where t1.type='IP' and t1.type_id = #{id,jdbcType=VARCHAR}
  </select>

    <select id="selectGroup" parameterType="java.lang.String" resultType="cn.mw.monitor.ipaddressmanage.dto.GroupDTO">
    select
    t1.group_id  groupId,
    t2.group_name groupName
    from mw_group_mapper t1
    left join mw_group_table t2 on t1.group_id = t2.group_id
    where t1.type='IP' and t1.type_id = #{id,jdbcType=VARCHAR}
  </select>

    <select id="selecLabels" parameterType="java.lang.String" resultType="cn.mw.monitor.ipaddressmanage.dto.LabelDTO">
    select
    t1.label_id  labelId,
    t2.label_name labelName
    from mw_ip_label_link_mapper t1
    left join mw_labelmanage_table t2 on t1.label_id = t2.label_id
    where  t2.delete_flag= 0 and t1.link_id = #{id,jdbcType=VARCHAR}
  </select>

    <sql id="Base_Column_List">
        a1.id,parent_id,label,a1.type,leaf,a1.timing,is_include,
        ip_addresses,descri,creator,create_date,modifier,
        modification_date,use_count,notuse_count,
        reserved_count,online,offline,mask,country,state,city,region,address_desc,longitude,latitude,radio_status,index_sort,create_ip,sign_id
  </sql>

    <sql id="Base_Column_List1">
        a2.id,parent_id,label,a2.type,leaf,a2.timing,is_include,
        ip_addresses,descri,creator,create_date,modifier,
        modification_date,use_count,notuse_count,
        reserved_count,online,offline,mask,country,state,city,region,address_desc,longitude,latitude,radio_status,index_sort,create_ip,sign_id
  </sql>

    <select id="selectIpAddressById1" resultMap="BaseResultMap" parameterType="cn.mw.monitor.ipaddressmanage.param.IpAddressManageTableParam">
        select
        <include refid="Base_Column_List"></include>
        from
        mw_ipaddressmanage_table a1
        where
        <if test="id !=null">
            a1.id = #{id,jdbcType=INTEGER}
        </if>
    </select>

    <select id="selectIpAddressById" resultMap="BaseResultMap1" parameterType="cn.mw.monitor.ipaddressmanage.param.IpAddressManageTable1Param">
        select
        <include refid="Base_Column_List"></include>
        from
        mw_ipaddressmanage_table a1
        where
        <if test="id !=null">
            a1.id = #{id,jdbcType=INTEGER}
        </if>
    </select>

    <select id="selectSubIpAddress" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from
    mw_ipaddressmanage_table
    where
    parent_id = #{id,jdbcType=INTEGER}
  </select>

    <select id="selectPubIpAddress" resultMap="BaseResultMap">
        select <include refid="Base_Column_List1"></include> from (
        select
        <include refid="Base_Column_List"></include>
        from
        mw_ipaddressmanage_table a1 where a1.parent_id = #{parentId,jdbcType=INTEGER}
        <if test="signId==1">
            and  (a1.sign_id=#{signId} or a1.sign_id is null)
        </if>
        <if test="signId!=1">
            and  a1.sign_id=#{signId}
        </if>
        ) a2
        <choose>
            <when test="isAdmin==false">
                left join
                (select type_id,org_id from mw_org_mapper where type='IP') t2 ON a2.id = t2.type_id
                where
                org_id in
                <foreach collection="orgIds" item="item" index="index" open="(" separator="," close=")">
                    #{item.value,jdbcType=INTEGER}
                </foreach>
                <include refid="criteria"></include>
                <include refid="union_group"></include>
            </when>
            <otherwise>
                <include refid="criteria"></include>
            </otherwise>
        </choose>
        GROUP BY id
        order by
        case when type='grouping' then 0 else 1 end,
        type asc,
        case when type='grouping' then create_date end desc,
        case when type!='grouping' then SUBSTRING_INDEX( ip_addresses, '.',-2 )+ 100 end ASC
    </select>


    <select id="selectIpKillPremit" resultType="java.lang.String">
        SELECT ip_address FROM `mw_ipaddressmanagelist_table` where  link_id in (
        SELECT a5.id from(
        select <include refid="Base_Column_List1"></include> from (
        select
        <include refid="Base_Column_List"></include>
        from
        mw_ipaddressmanage_table a1 where a1.type = "iPaddresses" ) a2
        <choose>
            <when test="isAdmin==false">
                left join
                (select type_id,org_id from mw_org_mapper where type='IP') t2 ON a2.id = t2.type_id
                where
                org_id in
                <foreach collection="orgIds" item="item" index="index" open="(" separator="," close=")">
                    #{item.value,jdbcType=INTEGER}
                </foreach>
                <include refid="criteria"></include>
                <include refid="union_kill_group"></include>
            </when>
            <otherwise>
                /* where 1=1*/
                <include refid="criteria"></include>
            </otherwise>
        </choose>
        ) a5) AND ip_address in
        <foreach collection="ip" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="selectIpSixKillPremit" resultType="java.lang.String">
        SELECT
        ip_addresses
        FROM
        ( SELECT a1.id, a1.type, ip_addresses FROM mw_ipv6manage_table a1 WHERE a1.type = "iPaddresses" ) a2
        <if test="isAdmin==false">
            LEFT JOIN ( SELECT type_id, org_id FROM mw_org_mapper WHERE type = 'IPV6' ) t2 ON a2.id = t2.type_id
            WHERE
            org_id IN  <foreach collection="orgIds" item="item" index="index" open="(" separator="," close=")">
            #{item.value,jdbcType=INTEGER}
        </foreach>
            <if test="groupIds!=null">
                UNION
                SELECT
                ip_addresses
                FROM
                mw_ipv6manage_table a1
                LEFT JOIN mw_datapermission a4 ON a1.id = a4.type_id
                LEFT JOIN (
                SELECT
                a.type_id,
                a.group_id
                FROM
                mw_group_mapper a
                LEFT JOIN mw_datapermission b ON a.type_id = b.type_id
                WHERE
                b.type = 'IPV6'
                AND b.is_group = 1
                ) t2 ON a1.id = t2.type_id
                WHERE
                a1.type = "iPaddresses"
                AND group_id IN
                <foreach collection="groupIds" item="item" index="index" open="(" separator="," close=")">
                    #{item.value,jdbcType=INTEGER}
                </foreach>
            </if>
        </if>
    </select>



    <select id="selectPriIpAddress" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from
        mw_ipaddressmanage_table a1
        left join mw_datapermission a4 ON a1.id = a4.type_id and a1.parent_id = #{parentId,jdbcType=INTEGER}
        left join
        (select type_id,user_id from mw_user_mapper where type='IP') a5 ON a1.id = a5.type_id
        where  a4.is_user = 1
        and a5.user_id = #{userId,jdbcType=INTEGER}
        <if test="signId==1">
            and  (a1.sign_id=#{signId} or a1.sign_id is null)
        </if>
        <if test="signId!=1">
            and  a1.sign_id=#{signId}
        </if>
        <include refid="criteria"></include>
        <include refid="union_group"></include>
        <if test="groupIds!=null">
            order by
            case when type='grouping' then 0 else 1 end,
            type asc,
            case when type='grouping' then create_date end desc,
            case when type!='grouping' then SUBSTRING_INDEX( ip_addresses, '.',-2 )+ 100 end ASC
        </if>
        <if test="groupIds==null">
            order by
            case when a1.type='grouping' then 0 else 1 end,
            type asc,
            case when a1.type='grouping' then create_date end desc,
            case when a1.type!='grouping' then SUBSTRING_INDEX( ip_addresses, '.',-2 )+ 100 end ASC
        </if>
    </select>

    <sql id="union_group">
        <if test="groupIds!=null">
            UNION
            select
            <include refid="Base_Column_List"></include>
            from
            mw_ipaddressmanage_table a1
            left join mw_datapermission a4 ON a1.id = a4.type_id
            left join
            (  SELECT a.type_id,a.group_id FROM mw_group_mapper a LEFT JOIN mw_datapermission b ON a.type_id = b.type_id WHERE b.type = 'IP' and b.is_group = 1) t2 ON a1.id = t2.type_id
            where
            a1.parent_id =#{parentId,jdbcType=INTEGER} and
            group_id IN
            <foreach collection="groupIds" item="item" index="index" open="(" separator="," close=")">
                #{item.value,jdbcType=INTEGER}
            </foreach>
            <if test="signId==1">
                and  (a1.sign_id=#{signId} or a1.sign_id is null)
            </if>
            <if test="signId!=1">
                and  a1.sign_id=#{signId}
            </if>
            <include refid="criteria"></include>
        </if>
    </sql>

    <sql id="union_kill_group">
        <if test="groupIds!=null">
            UNION
            select
            <include refid="Base_Column_List"></include>
            from
            mw_ipaddressmanage_table a1
            left join mw_datapermission a4 ON a1.id = a4.type_id
            left join
            (  SELECT a.type_id,a.group_id FROM mw_group_mapper a LEFT JOIN mw_datapermission b ON a.type_id = b.type_id WHERE b.type = 'IP' and b.is_group = 1) t2 ON a1.id = t2.type_id
            where
            a1.type = "iPaddresses" and
            group_id IN
            <foreach collection="groupIds" item="item" index="index" open="(" separator="," close=")">
                #{item.value,jdbcType=INTEGER}
            </foreach>
            <include refid="criteria"></include>
        </if>
    </sql>

    <sql id="union_kill_ipsix_group">
        <if test="groupIds!=null">
            UNION
            select
            <include refid="Base_Column_List"></include>
            from
            mw_ipv6manage_table a1
            left join mw_datapermission a4 ON a1.id = a4.type_id
            left join
            (  SELECT a.type_id,a.group_id FROM mw_group_mapper a LEFT JOIN mw_datapermission b ON a.type_id = b.type_id WHERE b.type = 'IPV6' and b.is_group = 1) t2 ON a1.id = t2.type_id
            where
            a1.type = "iPaddresses" and
            group_id IN
            <foreach collection="groupIds" item="item" index="index" open="(" separator="," close=")">
                #{item.value,jdbcType=INTEGER}
            </foreach>
            <include refid="criteria"></include>
        </if>
    </sql>

    <sql id="criteria">
        <!--<if test="id !=null ">
          and id=#{id,jdbcType=INTEGER}
        </if>
        <if test="parentId !=null ">
          and parent_id=#{parentId,jdbcType=INTEGER}
        </if>
        <if test="label != null and label != ''">
          and label =#{label,jdbcType=VARCHAR}
        </if>
        <if test="creator != null and creator != ''">
          and creator = #{creator,jdbcType=VARCHAR}
        </if>
        <if test="modifier != null and modifier != ''">
          and modifier = #{modifier,jdbcType=VARCHAR}
        </if>-->
    </sql>
    <!--<select id="selectIpAddressManage" resultMap="BaseResultMap" parameterType="cn.mw.monitor.ipaddressmanage.param.QueryIpAddressManageParam">
      select * from
          mw_ipaddressmanage_table
      where
      <if test="id !=null">
          and parent_id = #{id,jdbcType=INTEGER}
      </if>
    </select>-->

    <delete id="delete" parameterType="java.lang.Integer">
    delete from
        mw_ipaddressmanage_table
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <update id="update" parameterType="cn.mw.monitor.ipaddressmanage.param.AddUpdateIpAddressManageParam">
        update mw_ipaddressmanage_table
        <set>
            <if test="label != null">
                label = #{label,jdbcType=VARCHAR},
            </if>
            <if test="descri != null">
                descri = #{descri,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="timing!= null">
                timing=#{timing,jdbcType=INTEGER},
            </if>
            <if test="country!= null">
                country=#{country,jdbcType=VARCHAR},
            </if>
            <if test="state!= null">
                state=#{state,jdbcType=VARCHAR},
            </if>
            <if test="city!= null">
                city=#{city,jdbcType=VARCHAR},
            </if>
            <if test="region!= null">
                region=#{region,jdbcType=VARCHAR},
            </if>
            <if test="addressDesc!= null">
                address_desc=#{addressDesc,jdbcType=VARCHAR},
            </if>
            <if test="longitude!= null">
                longitude=#{longitude,jdbcType=VARCHAR},
            </if>
            <if test="latitude!= null">
                latitude=#{latitude,jdbcType=VARCHAR},
            </if>
            <if test="radioStatus!= null">
                radio_status=#{radioStatus,jdbcType=VARCHAR},
            </if>
            <if test="include!= null">
                is_include=#{include,jdbcType=INTEGER},
            </if>
            modification_date = now()
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="insert" parameterType="cn.mw.monitor.ipaddressmanage.param.AddUpdateIpAddressManageParam" useGeneratedKeys="true" keyProperty="id">
        insert into mw_ipaddressmanage_table
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="timing != null">timing,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="label != null and label != ''">label,</if>
            <if test="type != null and type != ''">`type`,</if>
            <if test="leaf != null">leaf,</if>
            <if test="include != null">is_include,</if>
            <if test="descri != null and descri != ''">descri,</if>
            <if test="mask != null and mask != ''">mask,</if>
            <if test="ipAddresses != null and ipAddresses != ''">ip_addresses,</if>
            <if test="creator != null">creator,</if>
            <if test="createDate != null">create_date,</if>
            <if test="modifier != null">modifier,</if>
            <if test="modificationDate != null">modification_date,</if>
            <if test="country!= null">country,</if>
            <if test="state!= null">state,</if>
            <if test="city!= null">city,</if>
            <if test="region!= null">region, </if>
            <if test="addressDesc != null">address_desc,</if>
            <if test="longitude != null">longitude,</if>
            <if test="latitude != null">latitude,</if>
            <if test="radioStatus != null">radio_status,</if>
            <if test="createIp != null">create_ip,</if>
            <if test="signId != null">sign_id</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="timing != null">#{timing,jdbcType=INTEGER},</if>
            <if test="parentId != null">#{parentId,jdbcType=INTEGER},</if>
            <if test="label != null and label != ''">#{label,jdbcType=VARCHAR},</if>
            <if test="type != null and type != ''">#{type,jdbcType=VARCHAR},</if>
            <if test="leaf != null ">#{leaf,jdbcType=BIT},</if>
            <if test="include != null ">#{include,jdbcType=BIT},</if>
            <if test="descri != null and descri != ''">#{descri,jdbcType=VARCHAR},</if>
            <if test="mask != null and mask != ''">#{mask,jdbcType=VARCHAR},</if>
            <if test="ipAddresses != null and ipAddresses != ''">#{ipAddresses,jdbcType=VARCHAR},</if>
            <if test="creator != null">#{creator,jdbcType=VARCHAR},</if>
            <if test="createDate != null"> #{createDate,jdbcType=TIMESTAMP},</if>
            <if test="modifier != null">#{modifier,jdbcType=VARCHAR},</if>
            <if test="modificationDate != null"> #{modificationDate,jdbcType=TIMESTAMP},</if>
            <if test="country!= null">#{country,jdbcType=VARCHAR},</if>
            <if test="state!= null">#{state,jdbcType=VARCHAR},</if>
            <if test="city!= null">#{city,jdbcType=VARCHAR},</if>
            <if test="region!= null">#{region,jdbcType=VARCHAR}, </if>
            <if test="addressDesc != null">#{addressDesc,jdbcType=VARCHAR},</if>
            <if test="longitude != null">#{longitude,jdbcType=VARCHAR},</if>
            <if test="latitude != null">#{latitude,jdbcType=VARCHAR},</if>
            <if test="radioStatus != null">#{radioStatus,jdbcType=VARCHAR},</if>
            <if test="createIp != null">#{createIp,jdbcType=INTEGER},</if>
            <if test="signId != null">#{signId,jdbcType=INTEGER}</if>
        </trim>
    </insert>

    <insert id="insertLabelLink" parameterType="java.util.List">
        INSERT INTO mw_ip_label_link_mapper
        (label_id,link_id,tagboard,date_tagboard)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.labelId,jdbcType=INTEGER},#{item.linkId,jdbcType=VARCHAR},
            #{item.tagboard,jdbcType=VARCHAR},#{item.dateTagboard,jdbcType=TIMESTAMP})
        </foreach>
    </insert>


    <delete id="deleteLabelLink">
        DELETE FROM mw_ip_label_link_mapper
        WHERE link_id = #{ipid,jdbcType=INTEGER}
   </delete>

    <select id="selectListByIds" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select * from
        mw_ipaddressmanage_table
        where id in
        <foreach collection="ids" item="item" index="index" open="(" separator="," close=")">
            #{item.value,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="selectListById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from
    mw_ipaddressmanage_table
    where parent_id = #{id,jdbcType=INTEGER}
  </select>

    <select id="selectAllIpaddresses" resultType="java.lang.String">
    select ip_addresses from
    mw_ipaddressmanage_table
    where type = 'iPaddresses'
        <if test="signId==1">
            and  (sign_id=#{signId} or sign_id is null)
        </if>
        <if test="signId!=1">
            and  sign_id=#{signId}
        </if>
  </select>

    <delete id="deleteByIpaddresses" parameterType="java.lang.String">
    delete from
        mw_ipaddressmanage_table
    where  ip_addresses = #{ipAddresses,jdbcType=VARCHAR}
  </delete>

    <select id="selectIdBytime" resultType="java.lang.Integer">
    select id from
    mw_ipaddressmanage_table
    where type = 'iPaddresses' and timing=#{time,jdbcType=INTEGER}
  </select>

    <insert id="addPubIP" parameterType="cn.mw.monitor.ipaddressmanage.param.AddPubIpAddressParam">
        insert into mw_pubipaddress_table
        (link_id,ip_address,ip_type,country,state,city,region,isp,longitude,latitude
        )values
        <foreach collection="list" item="item" separator=",">
            (#{item.linkId,jdbcType=INTEGER},
            #{item.ipAddress,jdbcType=VARCHAR},
            #{item.ipType,jdbcType=VARCHAR},
            #{item.country,jdbcType=VARCHAR},
            #{item.state,jdbcType=VARCHAR},
            #{item.city,jdbcType=VARCHAR},
            #{item.region,jdbcType=VARCHAR},
            #{item.isp,jdbcType=VARCHAR},
            #{item.longitude,jdbcType=VARCHAR},
            #{item.latitude,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <delete id="deletePubIp" parameterType="java.lang.Integer">
    delete from
        mw_pubipaddress_table
    where  link_id = #{id,jdbcType=INTEGER}
  </delete>

    <select id="selectPubIp" resultType="cn.mw.monitor.ipaddressmanage.param.AddPubIpAddressParam">
    select * from
    mw_pubipaddress_table
   </select>


    <select id="selectPriIp" resultType="cn.mw.monitor.ipaddressmanage.param.IpAddressManageTableParam">
   select * from
    mw_ipaddressmanage_table where longitude is not null and latitude is not null AND longitude !='' and latitude !=''
  </select>

    <select id="checkIsLeaf" resultType="java.lang.Integer" parameterType="java.lang.Integer">
   select count(*) from
    mw_ipaddressmanage_table where
    parent_id=#{id,jdbcType=INTEGER} and type ='grouping'
  </select>


    <select id="selectIpConnection" resultType="cn.mw.monitor.ipaddressmanage.param.MwIpConnection">
    SELECT * FROM `mw_ip_connection` where ip_address =#{ipAddress}
    AND oper_status = 0
  </select>

    <select id="getMwIPConnection" resultType="cn.mw.monitor.ipaddressmanage.param.MwIpConnection">
        SELECT * FROM `mw_ip_connection` where 1=1
        <choose>
            <when test="maps.size()>0">
                and ip_address in
                <foreach collection="maps" item="item" index="index" open="(" separator="," close=")">
                    #{item.ip}
                </foreach>
            </when>
            <otherwise>
                and ip_address ="-1"
            </otherwise>
        </choose>
        order by oper_time desc
    </select>


    <update id="updateIpConnection" >
        UPDATE mw_ip_connection set `oper_status` = 1 where id in
        <foreach collection="mwIpConnections" item="item" index="index" open="(" separator="," close=")">
            #{item.id}
        </foreach>

    </update>


    <select id="getOrgNameByIp" resultType="java.lang.String">
        SELECT distinct
	t1.org_name
FROM
	mw_org_mapper t
	RIGHT JOIN mw_sys_org t1 ON t.org_id = t1.org_id
WHERE
    t1.delete_flag=false
	AND t.type = 'IP'
	AND t.type_id in  ( SELECT link_id FROM mw_ipaddressmanagelist_table WHERE ip_address = #{ip,jdbcType=VARCHAR} )
    </select>


    <select id="getOrgNameByIpv6" resultType="java.lang.String">
        SELECT distinct
	t1.org_name
FROM
	mw_org_mapper t
	RIGHT JOIN mw_sys_org t1 ON t.org_id = t1.org_id
WHERE
    t1.delete_flag=false
	AND t.type = 'IPV6'
	AND t.type_id in  ( SELECT link_id FROM mw_ipv6managelist_table WHERE ip_address = #{ip,jdbcType=VARCHAR} )
    </select>


    <insert id="insertIpConnection" parameterType="cn.mw.monitor.ipaddressmanage.param.MwIpConnection">
        insert into mw_ip_connection
        (ip_address,org_name,oper_type,oper_time,oper_platform,oper,oper_status
        )values
        <foreach collection="list" item="item" separator=",">
            (#{item.ipAddress},
            #{item.orgName},
            #{item.operType},
            #{item.operTime},
            #{item.operPlatform},
            #{item.oper},
            #{item.operStatus}
            )
        </foreach>
    </insert>

    <select id="selectOrgName" resultType="java.lang.String">
   		SELECT
			org_name
		FROM
			mw_sys_org
		WHERE
			org_id IN (
			SELECT
				org_id
			FROM
				`mw_org_mapper`
			WHERE
				type_id IN (
				SELECT
					id
				FROM
					mw_ipaddressmanage_table
				WHERE
					id = (
					SELECT
						link_id
					FROM
						mw_ipaddressmanagelist_table
					WHERE
					ip_address IN ( #{ip}  )) UNION ALL
				SELECT
					id
				FROM
					mw_ipv6manage_table
				WHERE
					id = (
					SELECT
						link_id
					FROM
						mw_ipv6managelist_table
					WHERE
					ip_address IN ( #{ip} ))
				)
			AND type IN ( 'IP', 'IPV6' )
			)
  </select>


    <select id="selectPicture"  parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*) as no_use from
    mw_ipaddressmanagelist_table where link_id= #{id,jdbcType=INTEGER} and ip_state=0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 255
union all
select count(*) as used from
    mw_ipaddressmanagelist_table where link_id= #{id,jdbcType=INTEGER} and ip_state=1 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 255
	union all
select count(*) as reserve from
    mw_ipaddressmanagelist_table where link_id= #{id,jdbcType=INTEGER} and ip_state=2 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 255
		union all
select count(*) as on_line from
    mw_ipaddressmanagelist_table where link_id= #{id,jdbcType=INTEGER} and online=1 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 255
		union all
select count(*) as off_line from
    mw_ipaddressmanagelist_table where link_id= #{id,jdbcType=INTEGER} and online=0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 255
    union all
select count(*) as off_line from
    mw_ipaddressmanagelist_table where link_id= #{id,jdbcType=INTEGER} and assets_type='已知' AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 255
		union all
select count(*) as off_line from
    mw_ipaddressmanagelist_table where link_id= #{id,jdbcType=INTEGER}  and (assets_type is NULL OR assets_type !='已知') AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 255
		union all
select count(*) as off_line from
    mw_ipaddressmanagelist_table where link_id= #{id,jdbcType=INTEGER} and distribution_status=0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 255
		union all
select count(*) as off_line from
    mw_ipaddressmanagelist_table where link_id= #{id,jdbcType=INTEGER} and distribution_status=1 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 0 AND SUBSTRING_INDEX( ip_address, '.',-1 ) != 255
    union all
select count(*) as off_line from
    mw_ipaddressmanagelist_table where  ( SUBSTRING_INDEX( ip_address, '.',-1 ) = 0 or SUBSTRING_INDEX( ip_address, '.',-1 ) = 255  )   and  link_id= #{id,jdbcType=INTEGER}
  </select>



    <update id="changeParentId" >
        <choose>
            <when test="draggingType==true">
                UPDATE mw_ipaddressmanage_table set `parent_id` = #{parentId} where id =#{id}
            </when>
            <otherwise>
                UPDATE mw_ipv6manage_table set `parent_id` = #{parentId} where id =#{id}
            </otherwise>
        </choose>
    </update>

    <update id="changeAfterSort">
    <choose>
        <when test="draggingType==true">
            UPDATE mw_ipaddressmanage_table set `index_sort` = #{indexSort} where id =#{id}
        </when>
        <otherwise>
            UPDATE mw_ipv6manage_table set `index_sort` = #{indexSort} where id =#{id}
        </otherwise>
    </choose>
    </update>


    <select id="selectAllIpAddressById" resultMap="BaseResultMap" parameterType="cn.mw.monitor.ipaddressmanage.param.IpAddressManageTableParam">
        <choose>
            <when test="isIPv4==true">
                select
                <include refid="Base_Column_List"></include>
                from
                mw_ipaddressmanage_table a1
                where
                <if test="id !=null">
                    a1.id = #{id,jdbcType=INTEGER}
                </if>
            </when>
            <otherwise>
                select
                <include refid="Base_Column_List"></include>
                from
                mw_ipv6manage_table a1
                where
                <if test="id !=null">
                    a1.id = #{id,jdbcType=INTEGER}
                </if>
            </otherwise>
        </choose>
    </select>

    <select id="selectAllIpAddressByParenId"  resultType="java.util.Map">
    SELECT
    *
    FROM
    (
        SELECT
            id,
            TRUE AS IPv4,
            index_sort
        FROM
            `mw_ipaddressmanage_table` a1
        WHERE
            a1.parent_id = #{parentId}
             <if test="draggingType==true">
                and  a1.id !=#{id}
             </if>
            UNION ALL
        SELECT
            id,
            FALSE AS IPv6,
            index_sort
        FROM
            `mw_ipv6manage_table` a1
        WHERE
            a1.parent_id = #{parentId}
            <if test="draggingType==false">
                and  a1.id !=#{id}
            </if>
        ) a2
        ORDER BY
        a2.index_sort DESC
    </select>



    <select id="selectCount" resultType="java.lang.Integer">
   	SELECT count(*) FROM `mw_ipaddressmanagelist_table`
  </select>

    <update id="updateIpIncludecollect">
    UPDATE mw_ipaddressmanagelist_table set `is_include` = 1 where ip_address in
        <foreach collection="ids" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>

    <select id="selectEndAnbleIpAddress"  resultType="cn.mw.monitor.ipaddressmanage.param.AddUpdateIpAddressManageListParam">
       SELECT * FROM mw_ipaddressmanagelist_table WHERE  link_id in
(
 SELECT id FROM `mw_ipaddressmanage_table` WHERE  mask-"255.255.255.0" and id  not in ( SELECT link_id FROM `mw_ipaddressmanagelist_table` WHERE   ip_address like '%.255' ) AND type = 'iPaddresses'
 ) GROUP BY link_id
    </select>


    <select id="getIpaddressList"  resultType="java.util.Map">
    SELECT label,id AS `value` FROM `mw_ipaddressmanage_table` where type = "iPaddresses"
    </select>

    <select id="selectIpMangeHaveDistribution"  resultType="java.lang.Integer">
    select count(*) from
    mw_ipaddressmanagelist_table
    where link_id = #{id,jdbcType=INTEGER} and distribution_status = 1
    </select>

    <select id="selectIncleudeIP" resultType="java.lang.String">
        SELECT
        *
    FROM
	mw_ipaddressmanagelist_table a1 WHERE link_id =#{id} 	AND a1.is_include = true
    </select>


    <select id="getListIPaddressByLinkId" parameterType="java.lang.Integer" resultType="java.lang.String">
        select ip_address
        from mw_ipaddressmanagelist_table
        where link_id = #{id,jdbcType=INTEGER}
    </select>


    <update id="updateIpInclude">
        UPDATE mw_ipaddressmanagelist_table set `is_include` = 1 where link_id =#{id}
    </update>

    <update id="updateIpIncludeTwo">
        UPDATE mw_ipaddressmanagelist_table set `is_include` = 1 where ip_address = #{startIP} or ip_address = #{endIP}
    </update>

    <insert id="insertIpDelete">
        INSERT INTO `monitor`.`mw_ipaddress_delete`(`ip_address`, `delete_time`) VALUES
        <foreach collection="ipaddresses" item="item" index="index"  separator="," >
            (#{item},now())
        </foreach>
    </insert>


    <select id="selectIpaddressStatusHis"  resultType="cn.mw.monitor.ipaddressmanage.param.AddIpaddresStatusHis">
   SELECT * FROM `mw_ipaddress_status_his` where 1=1
        <if test="oldAssetsName != null and oldAssetsName != ''"> and old_assets_name like concat('%',#{oldAssetsName},'%')</if>
        <if test="oldMac != null and oldMac != ''"> and old_mac like concat('%',#{oldMac},'%')</if>
        <if test="oldRemarks != null and oldRemarks != ''"> and old_remarks like concat('%',#{oldRemarks},'%')</if>
        <if test="assetsName != null and assetsName != ''"> and assets_name like concat('%',#{assetsName},'%')</if>
        <if test="mac != null and mac != ''"> and mac like concat('%',#{mac},'%')</if>
        <if test="remarks != null and remarks != ''"> and remarks like concat('%',#{remarks},'%')</if>
        <if test="ipAddress != null and ipAddress != ''"> and ip_address like concat('%',#{ipAddress},'%')</if>
        <if test="creator != null and creator != ''"> and creator like concat('%',#{creator},'%')</if>
        ORDER BY create_date desc
    </select>
</mapper>
